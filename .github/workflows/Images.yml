name: Build Image Azure Virtual Desktop

on: workflow_dispatch

env:
  LOCATION: "westeurope"
  RG_NAME_IMAGE: "Rg-AVD-Images-000101"
  IMAGE_TEMPLATE_Name: "wvd10ImageTemplate00"
  SIG_NAME: "myaibsig01"
  IMAGE_DEF_NAME: "win10avd"

jobs:

 # Buid_Image_AVD:
 #   runs-on: windows-2019

#    steps:

#      - name: Log in with Azure
#        uses: azure/login@v1
#        with:
#          creds: '${{ secrets.AZURE_CREDENTIALS }}'
#          enable-AzPSSession: true    

#      - name: Installation des modules PowerShell
#        run: |
#          'Az.ImageBuilder', 'Az.ManagedServiceIdentity' | ForEach-Object {Install-Module -Name $_ -AllowPrerelease -Force}
      
#      - name: Prerequis
#        uses: azure/powershell@v1
#        with:
#          inlineScript: |            
#            $currentAzContext = Get-AzContext
#            $imageResourceGroup="${{ env.RG_NAME_IMAGE }}"
#            $location="${{ env.LOCATION }}"
#            $subscriptionID=$currentAzContext.Subscription.Id
#            $imageTemplateName="${{ env.IMAGE_TEMPLATE_Name}}"
#            $runOutputName="sigOutput"
#            New-AzResourceGroup -Name $imageResourceGroup -Location $location          
#          azPSVersion: 'latest'

#      - name: Identite et role
#        run: |
#          $imageResourceGroup="${{ env.RG_NAME_IMAGE }}"
#          $currentAzContext = Get-AzContext
#          $subscriptionID=$currentAzContext.Subscription.Id
#          $timeInt=$(get-date -UFormat "%s")
#          $imageRoleDefName="Azure Image Builder Image Def"+$timeInt
#          $idenityName="aibIdentity"+$timeInt          
#          New-AzUserAssignedIdentity -ResourceGroupName $imageResourceGroup -Name $idenityName
#          $idenityNameResourceId=$(Get-AzUserAssignedIdentity -ResourceGroupName $imageResourceGroup -Name $idenityName).Id
#          $idenityNamePrincipalId=$(Get-AzUserAssignedIdentity -ResourceGroupName $imageResourceGroup -Name $idenityName).PrincipalId
#          $aibRoleImageCreationUrl="https://raw.githubusercontent.com/azure/azvmimagebuilder/master/solutions/12_Creating_AIB_Security_Roles/aibRoleImageCreation.json"
#          $aibRoleImageCreationPath = "aibRoleImageCreation.json"
#          Invoke-WebRequest -Uri $aibRoleImageCreationUrl -OutFile $aibRoleImageCreationPath -UseBasicParsing
#          ((Get-Content -path $aibRoleImageCreationPath -Raw) -replace '<subscriptionID>', $subscriptionID) | Set-Content -Path $aibRoleImageCreationPath
#          ((Get-Content -path $aibRoleImageCreationPath -Raw) -replace '<rgName>', $imageResourceGroup) | Set-Content -Path $aibRoleImageCreationPath
#          ((Get-Content -path $aibRoleImageCreationPath -Raw) -replace 'Azure Image Builder Service Image Creation Role', $imageRoleDefName) | Set-Content -Path $aibRoleImageCreationPath
#          cat aibRoleImageCreation.json
#          Get-Module -ListAvailable -All | Where-Object {($_.Name -like 'Az.*') -and ($_.Version -ne '0.0')} | Sort-Object
          #New-AzRoleDefinition -InputFile  ./aibRoleImageCreation.json

  Run_AIB:
#    needs: Buid_Image_AVD
    runs-on: windows-2019

    steps:

      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          enable-AzPSSession: true    

      - name: Download Repo content for template
        uses: actions/checkout@v2

#      - name: Shared Image $sigGalleryName
#        run: |
#          'Az.Compute' | ForEach-Object {Install-Module -Name $_ -AllowPrerelease -Force}
#          $sigGalleryName="${{ env.SIG_NAME}}"
#          $imageResourceGroup="${{ env.RG_NAME_IMAGE }}"
#          $location="${{ env.LOCATION }}"
#          $imageDefName="${{ env.IMAGE_DEF_NAME}}"
#          New-AzGallery -GalleryName $sigGalleryName -ResourceGroupName $imageResourceGroup -Location $location
#          New-AzGalleryImageDefinition -GalleryName $sigGalleryName -ResourceGroupName $imageResourceGroup -Location $location -Name $imageDefName -OsState generalized -OsType Windows -Publisher 'myCo' -Offer 'Windows' -Sku '10wvd'   

      - name: Configure and submit template
        run: |            
          $currentAzContext = Get-AzContext
          $imageResourceGroup="${{ env.RG_NAME_IMAGE }}"
          $location="${{ env.LOCATION }}"
          $subscriptionID=$currentAzContext.Subscription.Id
          $imageDefName="${{ env.IMAGE_DEF_NAME}}"
          $imageTemplateName="${{ env.IMAGE_TEMPLATE_Name}}""
          $runOutputName="sigOutput"
          $sigGalleryName=""
          $idenityNameResourceId="ca84ea04-c7e0-44f9-b1c7-dc2e82de93e0"
          $templateFilePath="./ARM/AVDTemplate.json"
          $share_location="storage.file.core.windows.net"
          $share_folder="fslogix"
          ((Get-Content -path $templateFilePath -Raw) -replace '<subscriptionID>',$subscriptionID) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<rgName>',$imageResourceGroup) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<region>',$location) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<share_location>',$share_location) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<share_folder>',$share_folder) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<runOutputName>',$runOutputName) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<imageDefName>',$imageDefName) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<sharedImageGalName>',$sigGalleryName) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<region1>',$location) | Set-Content -Path $templateFilePath
          ((Get-Content -path $templateFilePath -Raw) -replace '<imgBuilderId>',$idenityNameResourceId) | Set-Content -Path $templateFilePath
          New-AzResourceGroupDeployment -ResourceGroupName $imageResourceGroup -TemplateFile $templateFilePath -api-version "2020-02-14" -imageTemplateName $imageTemplateName -svclocation $location
            
      

      